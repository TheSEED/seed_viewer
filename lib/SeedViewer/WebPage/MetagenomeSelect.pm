package SeedViewer::WebPage::MetagenomeSelect;

# $Id: MetagenomeSelect.pm,v 1.24 2008-10-01 16:10:38 jared Exp $

use base qw( WebPage );

use strict;
use warnings;

use WebConfig;

use SeedViewer::SeedViewer qw( get_menu_metagenome );

1;

=pod

=head1 NAME

MetagenomeSelect - an instance of WebPage which lets the user select a metagenome

=head1 DESCRIPTION

Display an metagenome select box

=head1 METHODS

=over 4

=item * B<init> ()

Called when the web page is instanciated.

=cut

sub init {
  my ($self) = @_;

  $self->title('Home');
  $self->require_css(CSS_PATH.'rast_home.css');

  # register components
  $self->application->register_component('TabView', 'MGSelection');
  $self->application->register_component('FilterSelect', 'MGSelectPub');
  $self->application->register_component('FilterSelect', 'MGSelectPrivate');

  return 1;
}


=pod

=item * B<output> ()

Returns the html output of the OrganismSelect page.

=cut

sub output {
  my ($self) = @_;

  my $content = '<div id="home">';
  
  my $html = "";

  my $scripts = "<script>\n";
  $scripts .= qq~ function switch_display (ID) {
  var doc = document.getElementById(ID);
  
  if (doc.style.display == "none") {
      doc.style.display="inline";

      var Textknoten = document.createTextNode("less");
      document.getElementById("expand_text").replaceChild(Textknoten, document.getElementById("expand_text").firstChild);

    document.getElementById("expand_img").src = "$FIG_Config::cgi_url/Html/MGRAST-less.png";
    document.getElementById("expand_img").title = "less";


  } else if  (doc.style.display == "inline") {
     doc.style.display="none";

     var Textknoten = document.createTextNode("more");
     document.getElementById("expand_text").replaceChild(Textknoten, document.getElementById("expand_text").firstChild);

     document.getElementById("expand_img").src = "$FIG_Config::cgi_url/Html/MGRAST-more.png";
     document.getElementById("expand_img").title = "more";

  } 

}~; 

  $scripts .= "</script>\n";
  
  $html .= $scripts;

  my $description = "<p>MG-RAST (Metagenome Rapid Annotation using Subsystem Technology) is a fully-automated service for annotating metagenome samples. It provides annotation of sequence fragments, their phylogenetic classification and an initial metabolic reconstruction. The service also provides means for comparing phylogenetic classifications and metabolic reconstructions of metagenomes.</p>";
  
  $description .= '<p>The service is built as a modified version of the <a href="http://rast.nmpdr.org" target="_blank">RAST server</a>, which was originally designed to support high-quality annotation of complete or draft microbial genomes. We have adapted this technology for the analysis of metagenomes and are currently able to handle fasta files generated by pyrosequencing (454) and Sanger sequencing data. In addition to <a href="http://www.theseed.org" target="_blank">SEED</a> and <a href="http://www.nmpdr.org" target=_blank><img src="'.$FIG_Config::cgi_url.'/Html/nmpdr_icon_small.png">&nbsp;NMPDR</a> data we use the following ribosomal RNA databases for our analyses: <a href="http://greengenes.lbl.gov" target="_blank">GREENGENES</a>, <a href="http://rdp.cme.msu.edu/" target="_blank">RDP-II</a>, <a href="http://www.arb-silva.de/" target="_blank">SILVA</a>, and <a href="http://bioinformatics.psb.ugent.be/webtools/rRNA/" target="_blank">European ribosomal RNA database.</a></p></p>';
  
  $description .= '<p>User submission and analysis are confidential, although each user may optionally allow a collaborative environment that enables multiple users to share datasets. In addition, users can also allow public access and request long-term storage of their metagenomic samples on the server. The server provides unique IDs for metagenomes and the sequences they contain and provides a stable mechanism for linking to. All data and analysis are available for download in a variety of different formats.</p>';
  
  $description .= "<p>To be able to contact you once the computation is finished and in case user intervention is required, we request that users register with a valid email address.</p>\n";
  $description .= "<p>We request that users register with a valid email address so we can contact you once the computation is finished or in case user intervention is required.</p>\n";

  my $intro ="<p><b>MG-RAST</b> is <b>a fully-automated service for annotating metagenome samples</b>.</p>\n"; 
  $intro .= "<p>It provides:<br>
 <ul>
 <li><b>annotation</b> of sequence fragments, 
 <li>their <b>phylogenetic classification</b>, 
 <li><b>metabolic reconstructions</b> and
 <li><b>comparison tools</b>
 </ul></p>\n";

  $intro .= "<p>The service is built as a modified version of the RAST server which was originally designed to support high-quality annotation of complete or draft microbial genomes.</p>";


  
  $intro .= "<div id='description' style='display:none'>$description</div>";

  $intro .="<p align=\"right\"><a onclick=\"switch_display('description')\" style='cursor:pointer;color:blue'><table><tr><td valign=\"center\"'><img id='expand_img' src=\"$FIG_Config::cgi_url/Html/MGRAST-more.png\"></td><td style=\"vertical-align:middle;\" id='expand_text'>more</td></tr></table></a></p>";
 
  
  $html .= $intro;

  my $cite = '<p><strong>If you use our service, please cite:</strong><br/><em>The Metagenomics RAST server - A public resource for the automatic phylogenetic and functional analysis of metagenomes</em> F. Meyer, D. Paarmann, M. D\'Souza, R. Olson , E. M. Glass, M. Kubal, T. Paczian , A. Rodriguez , R. Stevens, A. Wilke, J. Wilkening, R. A. Edwards<br/><em>BMC Bioinformatics 2008, 9:386
, [<a href="http://www.biomedcentral.com/1471-2105/9/386" target="_blank">article</a>]</em></p>';

  $html .= "<div style=\"background-color:#86D392\">".$cite."</div>";

  my $links ="";
  
  # check for RAST
  my $rast = $self->application->data_handle('RAST');
  if ($rast) {
    $links .="<table><tr>\n";
    $links .= "<td><a href='rast.cgi?page=Jobs'><img style='height: 140px;' src=\"$FIG_Config::cgi_url/Html/MGRAST-jobs.png\"></a></td>";
    $links .= "<td><a href='rast.cgi?page=Register'><img src=\"$FIG_Config::cgi_url/Html/MGRAST-register.png\"></a></td>";
    $links .= "<td align=\"center\"><a href='rast.cgi?page=Upload'><img src=\"".$FIG_Config::cgi_url."/Html/MGRAST-upload.png\"></a></td>"; 
    $links .="</tr><tr>";
    $links .= "<td>&raquo; <a href='rast.cgi?page=Jobs'>Manage your uploaded data</a></td>";
    $links .= "<td>&raquo; <a href='rast.cgi?page=Register'>Register a new account</a></td>";
    $links .= "<td>&raquo; <a href='rast.cgi?page=Upload'>Upload new metagenome to MG-RAST</a></td>";
  
    $links .="</tr></table>\n";
  }
  else {
      $html .= "<h2>Unfortunately, no RAST server was found.</h2>";
      return $html;
  }

  my $metagenomes = {};
  my $org_values_pub = [];
  my $org_labels_pub = [];
  my $org_values_private = [];
  my $org_labels_private = [];
  my $public_count = 0;

  # find public scope metagenomes
  my $public_scope = $self->application->dbmaster->Scope->init({ name => 'Public',
                                                                 application => undef });
  if ($public_scope) {
    my $public = $rast->Job->get_jobs_for_user($public_scope, 'view', 1);
    if (scalar(@$public)) {
      $public_count = scalar(@$public);
      
      foreach my $p (sort { $a->genome_name cmp $b->genome_name } @$public) {
	$metagenomes->{$p->genome_id} = 1;
	push @$org_values_pub, $p->genome_id;
	push @$org_labels_pub, "Public: ".$p->genome_name." (".$p->genome_id.") from project ".$p->project;
      }
    }
  }
  

  # if logged in, check for private organisms
  my $login_text = "";
  if ($self->application->session->user()) {
      my $orgs = $rast->Job->get_jobs_for_user($self->application->session->user(), 'view', 1);
      foreach my $o (sort { $a->genome_name cmp $b->genome_name } @$orgs) {
	  unless (exists($metagenomes->{$o->genome_id})) {
              $metagenomes->{$o->genome_id} = 1;
              push @$org_values_private, $o->genome_id;
              push @$org_labels_private, "Private: ".$o->genome_name." (".$o->genome_id.") from project ".$o->project;
	  }
      }
  } else {
    $login_text .= "<p>You are currently not logged in. <strong><a href='?page=Login'>To access your private metagenomes, please log in</a>.</strong></p>";
  }


  # show select box if we found any metagenomes
  if (scalar(keys(%$metagenomes))) {
    my $select_view = $self->application->component('MGSelection');
    $select_view->width(625);

    my ($pub_tab, $private_tab);

    # init select component
    my $select = $self->application->component('MGSelectPub');
    $select->values( $org_values_pub );
    $select->labels( $org_labels_pub );
    $select->name('metagenome');
    $select->width(550);
    
    $pub_tab .= "<h2>You have access to the following public metagenomes:</h2>";
    $pub_tab .= "<p><strong>Number of publicly available metagenome:</strong> $public_count</p>";
    $pub_tab .= $login_text;

      # create select metagenome form
    $pub_tab .= $self->start_form( 'mg_select_form_pub', { 'page' => 'MetagenomeOverview' } );
    $pub_tab .= $select->output();

      #unless ($self->application->session->user()) {
#	  $links .= "<input type='hidden' name='silent_login' value='guest:guest'>";
#      }
    
    $pub_tab .= "<br>" . $self->button('View Metagenome', name => 'submit');
    $pub_tab .= $self->end_form();
    $select_view->add_tab('Public Metagenomes', "<div style='padding-left:10px;'>".$pub_tab."</div>");
    
    if ($self->application->session->user() && scalar @{$org_values_private}) {
      $private_tab .= "<h2>Your private metagenomes:</h2>";
      $private_tab .= "<p><strong>Number of private metagenome:</strong> ".scalar @{$org_values_private}."</p>";
      $private_tab .= $login_text;

      my $select_private = $self->application->component('MGSelectPrivate');
      $select_private->values( $org_values_private );
      $select_private->labels( $org_labels_private );
      $select_private->name('metagenome');
      $select_private->width(550);
      
	# create select metagenome form
      $private_tab .= $self->start_form( 'mg_select_form_private', { 'page' => 'MetagenomeOverview' } );
      $private_tab .= $select_private->output();
      

      $private_tab .= "<br>" . $self->button('View Metagenome', name => 'submit');
      $private_tab .= $self->end_form();
      $select_view->add_tab('Private Metagenomes', "<div style='padding-left:10px;'>".$private_tab."</div>");
    }
    $links .= "<br>".$select_view->output();
  }
  else {
      $links .= "<h2>Unfortunately, you do not have access to any metagenomes.</h2>";
  }

  $content .= "<table><tr><td style='width: 355px; text-align: justify;'>$html</td><td style='padding-left: 30px;'>$links</td></tr></table>";
  $content .= "</div>";
  
  return $content;
}


=pod

=item * B<required_rights>()

Returns a reference to the array of required rights

=cut

sub supported_rights {
  return [ [ 'view', 'genome', '*' ] ];
}

